<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 仓库调度记录(depository_record) -->
<mapper namespace="com.dreamchaser.depository_manage.mapper.DepositoryRecordMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="simpleDepositoryRecordMap" type="com.dreamchaser.depository_manage.entity.SimpleDepositoryRecord">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="applicant_id" property="applicantId" jdbcType="INTEGER" />
        <result column="apply_remark" property="applyRemark" jdbcType="VARCHAR" />
        <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <!-- 字段映射 -->
    <resultMap id="depositoryRecordMap" type="com.dreamchaser.depository_manage.entity.DepositoryRecord">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="application_id" property="applicationId" jdbcType="INTEGER" />
        <result column="mname" property="mname" jdbcType="VARCHAR" />
        <result column="depository_id" property="depositoryId" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="quantity" property="quantity" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="VARCHAR" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="applicant_id" property="applicantId" jdbcType="INTEGER" />
        <result column="apply_remark" property="applyRemark" jdbcType="VARCHAR" />
        <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
        <result column="reviewer_id" property="reviewerId" jdbcType="INTEGER" />
        <result column="review_remark" property="reviewRemark" jdbcType="VARCHAR" />
        <result column="review_time" property="reviewTime" jdbcType="TIMESTAMP" />
        <result column="review_pass" property="reviewPass" jdbcType="INTEGER" />
        <result column="checker_id" property="checkerId" jdbcType="INTEGER" />
        <result column="check_remark" property="checkRemark" jdbcType="VARCHAR" />
        <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
        <result column="check_pass" property="checkPass" jdbcType="INTEGER" />
    </resultMap>


    <!-- 表查询字段 -->
    <sql id="simpleColumns">
        dr.id, dr.type, dr.applicant_id, dr.apply_remark, dr.apply_time
    </sql>
    <!-- 表查询字段 -->
    <sql id="allColumns">
        dr.id, dr.application_id, dr.mname, dr.depository_id, dr.type, dr.quantity, dr.price, dr.state,
        dr.applicant_id, dr.apply_remark, dr.apply_time, dr.reviewer_id, dr.review_remark, dr.review_time, dr.review_pass,
        dr.checker_id, dr.check_remark, dr.check_time, dr.check_pass
    </sql>
    <!-- 查询所有数据行数 -->
    <select id="findCount" resultType="integer">
        SELECT
        count(*)
        FROM depository_record dr
    </select>
    <!-- 查询相应用户的任务数 -->
    <select id="findMyTaskCount" resultType="integer" parameterType="map">
        SELECT
        count(*)
        FROM depository_record dr where 1=1
        <if test='isDone == "0"'>
            and (dr.review_time is null and dr.reviewer_id =#{userId})
            or (dr.check_time is null and dr.checker_id = #{userId})
        </if>
        <if test='isDone == "1"'>
            and (dr.review_time is not null and dr.reviewer_id =#{userId})
            or (dr.check_time is not null and dr.checker_id = #{userId})
        </if>
    </select>
    <!-- 查询所有数据 -->
    <select id="findCountByCondition" resultType="integer" parameterType="map">
        SELECT
        count(*)
        FROM depository_record dr WHERE 1 = 1
        <if test="applicationId != null">
            AND dr.application_id = #{applicationId}
        </if>
        <if test="mname != null and mname != ''">
            AND dr.mname LIKE CONCAT('%', #{mname}, '%')
        </if>
        <if test="depositoryId != null">
            AND dr.depository_id = #{depositoryId}
        </if>
        <if test="type != null">
            AND dr.type = #{type}
        </if>
        <if test="quantity != null">
            AND dr.quantity = #{quantity}
        </if>
        <if test="price != null">
            AND dr.price = #{price}
        </if>
        <if test="state != null and state != ''">
            AND dr.state LIKE CONCAT('%', #{state}, '%')
        </if>
        <if test="applicantId != null">
            AND dr.applicant_id = #{applicantId}
        </if>
        <if test="applyRemark != null and applyRemark != ''">
            AND dr.apply_remark LIKE CONCAT('%', #{applyRemark}, '%')
        </if>
        <if test="applyTime != null">
            AND dr.apply_time >= #{applyTime}
        </if>
        <if test="reviewerId != null">
            AND dr.reviewer_id = #{reviewerId}
        </if>
        <if test="reviewRemark != null and reviewRemark != ''">
            AND dr.review_remark LIKE CONCAT('%', #{reviewRemark}, '%')
        </if>
        <if test="reviewTime != null">
            AND dr.review_time = #{reviewTime}
        </if>
        <if test="reviewPass != null">
            AND dr.review_pass = #{reviewPass}
        </if>
        <if test="checkerId != null">
            AND dr.checker_id = #{checkerId}
        </if>
        <if test="checkRemark != null and checkRemark != ''">
            AND dr.check_remark LIKE CONCAT('%', #{checkRemark}, '%')
        </if>
        <if test="checkTime != null">
            AND dr.check_time = #{checkTime}
        </if>
        <if test="checkPass != null">
            AND dr.check_pass = #{checkPass}
        </if>
    </select>
    <!-- 查询所有数据 -->
    <select id="findDepositoryRecordAll" resultMap="depositoryRecordMap">
        SELECT
        <include refid="allColumns" />
        FROM depository_record dr
    </select>
    <!-- 根据id查询数据 -->
    <select id="findDepositoryRecordById" resultMap="depositoryRecordMap" parameterType="integer">
        SELECT
        <include refid="allColumns" />
        FROM depository_record dr
        where dr.id=#{id}
    </select>

    <!-- 根据isDone来寻找完成任务或者未完成任务 -->
    <select id="findMyTask" resultMap="simpleDepositoryRecordMap" parameterType="map">
        SELECT
        <include refid="simpleColumns" />
        FROM depository_record dr WHERE 1=1
        <if test='isDone == "0"'>
            and (dr.review_time is null and dr.reviewer_id =#{userId})
            or (dr.check_time is null and dr.checker_id = #{userId})
        </if>
        <if test='isDone == "1"'>
            and (dr.review_time is not null and dr.reviewer_id =#{userId})
            or (dr.check_time is not null and dr.checker_id = #{userId})
        </if>
        <if test="begin != null and size != null">
            LIMIT #{begin},#{size}
        </if>
    </select>
    <select id="findDepositoryRecordByCondition" resultMap="depositoryRecordMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM depository_record dr WHERE 1 = 1
        <if test="applicationId != null">
            AND dr.application_id = #{applicationId}
        </if>
        <if test="mname != null and mname != ''">
            AND dr.mname LIKE CONCAT('%', #{mname}, '%')
        </if>
        <if test="depositoryId != null">
            AND dr.depository_id = #{depositoryId}
        </if>
        <if test="type != null">
            AND dr.type = #{type}
        </if>
        <if test="quantity != null">
            AND dr.quantity = #{quantity}
        </if>
        <if test="price != null">
            AND dr.price = #{price}
        </if>
        <if test="state != null and state != ''">
            AND dr.state LIKE CONCAT('%', #{state}, '%')
        </if>
        <if test="applicantId != null">
            AND dr.applicant_id = #{applicantId}
        </if>
        <if test="applyRemark != null and applyRemark != ''">
            AND dr.apply_remark LIKE CONCAT('%', #{applyRemark}, '%')
        </if>
        <if test="applyTime != null">
            AND dr.apply_time >= #{applyTime}
        </if>
        <if test="reviewerId != null">
            AND dr.reviewer_id = #{reviewerId}
        </if>
        <if test="reviewRemark != null and reviewRemark != ''">
            AND dr.review_remark LIKE CONCAT('%', #{reviewRemark}, '%')
        </if>
        <if test="reviewTime != null">
            AND dr.review_time = #{reviewTime}
        </if>
        <if test="reviewPass != null">
            AND dr.review_pass = #{reviewPass}
        </if>
        <if test="checkerId != null">
            AND dr.checker_id = #{checkerId}
        </if>
        <if test="checkRemark != null and checkRemark != ''">
            AND dr.check_remark LIKE CONCAT('%', #{checkRemark}, '%')
        </if>
        <if test="checkTime != null">
            AND dr.check_time = #{checkTime}
        </if>
        <if test="checkPass != null">
            AND dr.check_pass = #{checkPass}
        </if>
        <if test="begin != null and size != null">
            LIMIT #{begin},#{size}
        </if>
    </select>

    <!-- 根据主键查询数据 -->
    <select id="findDepositoryRecordByIds" resultMap="depositoryRecordMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM depository_record dr WHERE dr.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertDepositoryRecord" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO depository_record (
            id, application_id, mname, depository_id, type, quantity, price, state,
            applicant_id, apply_remark, apply_time,
            reviewer_id, review_remark, review_time,review_pass, checker_id, check_remark,
            check_time,check_pass
        ) VALUES (
            #{id},
            #{applicationId},
            #{mname},
            #{depositoryId},
            #{type},
            #{quantity},
            #{price},
            #{state},
            #{applicantId},
            #{applyRemark},
            #{applyTime},
            #{reviewerId},
            #{reviewRemark},
            #{reviewTime},
            #{reviewPass},
            #{checkerId},
            #{checkRemark},
            #{checkTime},
            #{checkPass}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertDepositoryRecords" parameterType="list">
        INSERT INTO depository_record (
        id, application_id, mname, depository_id, type, quantity, price, state,
        applicant_id, apply_remark, apply_time, reviewer_id, review_remark, review_time,review_pass, checker_id, check_remark,
        check_time,check_pass
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{id},
                #{applicationId},
                #{mname},
                #{depositoryId},
                #{type},
                #{quantity},
                #{price},
                #{state},
                #{applicantId},
                #{applyRemark},
                #{applyTime},
                #{reviewerId},
                #{reviewRemark},
                #{reviewTime},
                #{reviewPass},
                #{checkerId},
                #{checkRemark},
                #{checkTime},
                #{checkPass}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateDepositoryRecord" parameterType="map">
        UPDATE depository_record
        <set>
            <if test="applicationId != null">
                application_id = #{applicationId},
            </if>
            <if test="mname != null">
                mname = #{mname},
            </if>
            <if test="depositoryId != null">
                depository_id = #{depositoryId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="applicantId != null">
                applicant_id = #{applicantId},
            </if>
            <if test="applyRemark != null">
                apply_remark = #{applyRemark},
            </if>
            <if test="applyTime != null">
                apply_time = #{applyTime},
            </if>
            <if test="reviewerId != null">
                reviewer_id = #{reviewerId},
            </if>
            <if test="reviewRemark != null">
                review_remark = #{reviewRemark},
            </if>
            <if test="reviewTime != null">
                review_time = #{reviewTime},
            </if>
            <if test="reviewPass != null">
                review_pass = #{reviewPass},
            </if>
            <if test="checkerId != null">
                checker_id = #{checkerId},
            </if>
            <if test="checkRemark != null">
                check_remark = #{checkRemark},
            </if>
            <if test="checkTime != null">
                check_time = #{checkTime},
            </if>
            <if test="checkPass != null">
                check_pass = #{checkPass}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateDepositoryRecords" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE depository_record
            <set>
                <if test="applicationId != null">
                    application_id = #{applicationId},
                </if>
                <if test="mname != null">
                    mname = #{mname},
                </if>
                <if test="depositoryId != null">
                    depository_id = #{depositoryId},
                </if>
                <if test="type != null">
                    type = #{type},
                </if>
                <if test="quantity != null">
                    quantity = #{quantity},
                </if>
                <if test="price != null">
                    price = #{price},
                </if>
                <if test="state != null">
                    state = #{state},
                </if>
                <if test="applicantId != null">
                    applicant_id = #{applicantId},
                </if>
                <if test="applyRemark != null">
                    apply_remark = #{applyRemark},
                </if>
                <if test="applyTime != null">
                    apply_time = #{applyTime},
                </if>
                <if test="reviewerId != null">
                    reviewer_id = #{reviewerId},
                </if>
                <if test="reviewRemark != null">
                    review_remark = #{reviewRemark},
                </if>
                <if test="reviewTime != null">
                    review_time = #{reviewTime},
                </if>
                <if test="reviewPass != null">
                    review_pass = #{reviewPass},
                </if>
                <if test="checkerId != null">
                    checker_id = #{checkerId},
                </if>
                <if test="checkRemark != null">
                    check_remark = #{checkRemark},
                </if>
                <if test="checkTime != null">
                    check_time = #{checkTime},
                </if>
                <if test="checkPass != null">
                    check_pass = #{checkPass}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteDepositoryRecordById" parameterType="integer">
        DELETE FROM depository_record WHERE id = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteDepositoryRecordByIds" parameterType="list">
        DELETE FROM depository_record WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>