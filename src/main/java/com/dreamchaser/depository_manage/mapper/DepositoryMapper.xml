<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- depository -->
<mapper namespace="com.dreamchaser.depository_manage.mapper.DepositoryMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="depositoryMap" type="com.dreamchaser.depository_manage.entity.Depository">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="dname" property="dname" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->
    
    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        d.id, d.dname, d.address, d.introduce
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->
    
    <!-- 查询所有数据 -->
    <select id="findDepositoryNameById" resultType="string" parameterType="int">
        SELECT
            d.dname
        FROM depository d where d.id=#{id}
    </select>

    <!-- 查询所有数据 -->
    <select id="findDepositoryAll" resultMap="depositoryMap">
        SELECT
        <include refid="allColumns" />
        FROM depository d
    </select>
    
    <!-- 根据条件参数查询数据列表 -->
    <select id="findDepositoryByCondition" resultMap="depositoryMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM depository d WHERE 1 = 1
        <if test="dname != null and dname != ''">
            AND d.dname LIKE CONCAT('%', #{dname}, '%')
        </if>
        <if test="address != null and address != ''">
            AND d.address LIKE CONCAT('%', #{address}, '%')
        </if>
        <if test="introduce != null and introduce != ''">
            AND d.introduce LIKE CONCAT('%', #{introduce}, '%')
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findDepositoryByIds" resultMap="depositoryMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM depository d WHERE d.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertDepository" parameterType="map">
        INSERT INTO depository (
            id, dname, address, introduce
        ) VALUES (
            #{id},
            #{dname},
            #{address},
            #{introduce}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertDepositorys" parameterType="list">
        INSERT INTO depository (
            id, dname, address, introduce
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.dname},
                #{item.address},
                #{item.introduce}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateDepository" parameterType="map">
        UPDATE depository
        <set>
            <if test="dname != null">
                dname = #{dname},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="introduce != null">
                introduce = #{introduce}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateDepositorys" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE depository
            <set>
                <if test="item.dname != null">
                    dname = #{item.dname},
                </if>
                <if test="item.address != null">
                    address = #{item.address},
                </if>
                <if test="item.introduce != null">
                    introduce = #{item.introduce}
                </if>
            </set>
            WHERE id = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteDepositoryById" parameterType="int">
        DELETE FROM depository WHERE id = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteDepositoryByIds" parameterType="list">
        DELETE FROM depository WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>